// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using partymanager.Infrastructure.Data.Context;

#nullable disable

namespace partymanager.Infrastructure.Data.Migrations
{
    [DbContext(typeof(SqlServerContext))]
    [Migration("20240906205548_AddTipoEventoItem")]
    partial class AddTipoEventoItem
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("partymanager.Domain.Entidades.Item", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("idTipoItem")
                        .HasColumnType("int");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("precoUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.HasIndex("idTipoItem");

                    b.ToTable("item");
                });

            modelBuilder.Entity("partymanager.Domain.Entidades.TipoEvento", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.ToTable("tipoevento");
                });

            modelBuilder.Entity("partymanager.Domain.Entidades.TipoEventoItem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("idItem")
                        .HasColumnType("int");

                    b.Property<int>("idTipoEvento")
                        .HasColumnType("int");

                    b.Property<decimal>("quantidadePorPessoa")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.HasIndex("idItem");

                    b.HasIndex("idTipoEvento");

                    b.ToTable("tipoeventoitem");
                });

            modelBuilder.Entity("partymanager.Domain.Entidades.TipoItem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.ToTable("tipoitem");
                });

            modelBuilder.Entity("partymanager.Domain.Entidades.Item", b =>
                {
                    b.HasOne("partymanager.Domain.Entidades.TipoItem", "tipoitem")
                        .WithMany("item")
                        .HasForeignKey("idTipoItem")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("tipoitem");
                });

            modelBuilder.Entity("partymanager.Domain.Entidades.TipoEventoItem", b =>
                {
                    b.HasOne("partymanager.Domain.Entidades.Item", "item")
                        .WithMany("tipoeventoitem")
                        .HasForeignKey("idItem")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("partymanager.Domain.Entidades.TipoEvento", "tipoevento")
                        .WithMany("tipoeventoitem")
                        .HasForeignKey("idTipoEvento")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("item");

                    b.Navigation("tipoevento");
                });

            modelBuilder.Entity("partymanager.Domain.Entidades.Item", b =>
                {
                    b.Navigation("tipoeventoitem");
                });

            modelBuilder.Entity("partymanager.Domain.Entidades.TipoEvento", b =>
                {
                    b.Navigation("tipoeventoitem");
                });

            modelBuilder.Entity("partymanager.Domain.Entidades.TipoItem", b =>
                {
                    b.Navigation("item");
                });
#pragma warning restore 612, 618
        }
    }
}
